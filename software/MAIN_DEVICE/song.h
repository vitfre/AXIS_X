/*
 * song.h
 *
 * Created: 04.01.2014 22:01:02
 *  Author: Администратор
 */ 


#ifndef SONG_H_
#define SONG_H_
//---------------------------------------------------------------------------------------
#define F_CPU 16000000UL // or whatever may be your frequency
//---------------------------------------------------------------------------------------
#include <avr/interrupt.h>
#include <util/delay.h>
#include <avr/io.h>
//---------------------------------------------------------------------------------------
#define BUZZ_LD_INIT		(DDRG|=(1<<4));(PORTG&=~(1<<6));	(DDRG|=(1<<0));(PORTG&=~(1<<0));	(DDRG|=(1<<1));(PORTG&=~(1<<1));	(DDRG|=(1<<2));(PORTG&=~(1<<2));
#define BUZZ_ON				(PORTG|=(1<<4));
#define BUZZ_OFF			(PORTG&=~(1<<4));
//---------------------------------------------------------------------------------------
#define LED_OK				0
#define LED_busy			1
#define LED_ERR				2
/**************************************************************************
*   Function name : Beep_tone
*   Returns :       нет
*   Parameters :    довжина піка
*   Purpose :       пикаем
****************************************************************************/
void beep_tone(unsigned int i)
{
	//---------------------------------------------------------------------------------------
	BUZZ_ON
	for (;1<i;i--)
	{
		_delay_ms(1);
	};
	BUZZ_OFF
	//---------------------------------------------------------------------------------------
};

/**************************************************************************
*   Function name : all_ok
*   Returns :       void
*   Parameters :    код помилок
*   Purpose :       Шукаемо у ФЛЕШ програму під кожен регулятор
****************************************************************************/
void all_ok(unsigned char err)
{
	//---------------------------------------------------------------------------------------
	switch(err)
	{
		case 0:
		{
			//---------------------------------------------------------------------------------------
			ClrBit(PORTA,LED_OK);
			ClrBit(PORTA,LED_busy);
			ClrBit(PORTA,LED_ERR);
			//---------------------------------------------------------------------------------------
		};break;
		//---------------------------------------------------------------------------------------
		case 16:
		{
			//---------------------------------------------------------------------------------------
			SetBit(PORTA,LED_OK);
			SetBit(PORTA,LED_busy);
			SetBit(PORTA,LED_ERR);
			//---------------------------------------------------------------------------------------
		};break;
		//---------------------------------------------------------------------------------------
		default:
		{
			//---------------------------------------------------------------------------------------
			//---------------------------------------------------------------------------------------
		};
	};
	//---------------------------------------------------------------------------------------
};


#endif /* SONG_H_ */