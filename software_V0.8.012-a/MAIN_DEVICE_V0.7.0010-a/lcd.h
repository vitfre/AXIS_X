/*
 * lcd.h
 *
 * Created: 18.10.2013 12:21:52
 *  Author: vmk
 */

#ifndef LCD_H_
#define LCD_H_
//---------------------------------------------------------------------------------------
#define F_CPU 16000000UL // or whatever may be your frequency
//---------------------------------------------------------------------------------------
#include <avr/io.h>
#include <util/delay.h>
#include <avr/pgmspace.h>
//---------------------------------------------------------------------------------------
#include "bit_macros.h"
//---------------------------------------------------------------------------------------
#define lcd_mask 				(1<<D6)|(1<<D7)|(1<<lcd_rs)|(1<<lcd_e)
#define lcd_mask_2 				(1<<D4)|(1<<D5)
//---------------------------------------------------------------------------------------
#define lcd_port				PORTA
#define lcd_ddrx				DDRA
#define lcd_port_2				PORTC
#define lcd_ddrx_2				DDRC
#define D4						6UL
#define D5						7UL
#define D6						7UL
#define D7						6UL
#define lcd_rs					5UL
//#define lcd_rw				5UL
#define lcd_e					4UL
#define lcd_kom					0UL
#define lcd_sym					1UL
//***************************************************************************************
//Procedure sending LCD byte
//Input: Byte, Kommand/Symbol data
//***************************************************************************************
void send_lcd_byte(unsigned char lcd_data,unsigned char rs_status);
//***************************************************************************************
//Procedure initialisation LCD
//***************************************************************************************
void init_LCD();
//***************************************************************************************
//Procedure sending LCD symbol
//Input: Symbol
//***************************************************************************************
void send_lcd_symbol(unsigned char temp_symbol);
//***************************************************************************************
//Procedure setting LCD position
//Input: Line(1,2), Position(1..16)
//***************************************************************************************
void set_lcd_position(unsigned char temp_line, unsigned char temp_pos);
//***************************************************************************************
//Procedure send symbol string to LCD
//Input: Symbol string
//***************************************************************************************
void send_lcd_string(const char *temp_string);
//***************************************************************************************
//Procedure send symbol string to LCD
//Input: Symbol string
//***************************************************************************************
void send_lcd_string_P(const char *string);
//***************************************************************************************
//Отправить строку на индикатор  16 символов
//задаются все символы, можно в кодах в виде ('A',0x55)
//***************************************************************************************
void send_lcd_code_string(char s1,char s2,char s3,char s4,char s5,char s6,char s7,char s8,char s9,char s10,char s11,char s12,char s13,char s14,char s15,char s16);
//***************************************************************************************
//Procedure clearing LCD
//***************************************************************************************
void clear_lcd();
//***************************************************************************************
//Procedure detecting symbol
//Input: Digit,
//Output: Symbol
//***************************************************************************************
unsigned char detect_symbol(unsigned char temp_det_sym);
//***************************************************************************************
//Вывести на индикатор короткую строку из 2-х цифр
//***************************************************************************************
void detect_short_string(unsigned long int temp_volt);
//***************************************************************************************
//Вывести на индикатор короткую строку из 3-х цифр
//***************************************************************************************
void detect_short_3_string(unsigned long int temp_volt);
//***************************************************************************************
//Procedure detecting string.
//Input: Digit data 4 symbol,
//Output: 4 symbol on LCD on presetting position
//***************************************************************************************
void detect_string(unsigned long int temp_volt);
//***************************************************************************************
//***************************************************************************************
//***************************************************************************************

#endif /* LCD_H_ */